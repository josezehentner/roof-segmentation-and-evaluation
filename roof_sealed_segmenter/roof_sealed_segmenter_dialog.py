# -*- coding: utf-8 -*-
"""
/***************************************************************************
 SegmenterDialog
                                 A QGIS plugin
 Pre- and postprocess segmented data
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-04-26
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Jos√© Zehentner
        email                : jose.zehentner@gmx.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from .logic.centroids_csv import get_centroidcoords_csv
from .logic.tile_geotiff import split_geotiff
from .logic.create_merged import create_merged

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'roof_sealed_segmenter_dialog_base.ui'))


class SegmenterDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(SegmenterDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #logic-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.CreateCentroidsCsv.clicked.connect(self.pb_create_centroids_csv_clicked)
        self.TileTiff.clicked.connect(self.pb_tile_tiff_clicked)
        self.pbCreateMerged.clicked.connect(self.pb_create_merged_clicked)
        #self.spinBox.valueChanged.connect(self.pb_tile_tiff_clicked)

    def pb_create_centroids_csv_clicked(self):
        get_centroidcoords_csv(self)

    def pb_tile_tiff_clicked(self):
        split_geotiff(self)

    def pb_create_merged_clicked(self):
        create_merged(self)








